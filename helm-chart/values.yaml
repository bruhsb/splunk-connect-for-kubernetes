# Splunk Connect for Kubernetes is a umbraller chart which itself does not contain any template,
# so there is no configurable parameters for itself.

# Use global configurations for shared configurations between sub-charts.
# Supported global configurations:
#
# global:
#   logLevel:
#   splunk:
#     # HEC related configurations
#     hec:
#   kubernetes:
#     clusterName: "cluster_name"
# For other configurations for sub-charts, please check their values.yaml for details.

global:
  kubernetes:
    clusterName: "grupord-devqa"

  logs: {}

  # Override global Fluentd config path and exclude path.
  # This is can be used to exclude verbose logs including various system and Helm/Tiller related logs.
  fluentd:
    # path of logfiles, default /var/log/containers/*.log
    path: /var/log/containers/*.log
    # paths of logfiles to exclude. object type is array as per fluentd specification:
    # https://docs.fluentd.org/input/tail#exclude_path
    exclude_path:
     - /var/log/containers/kube-svc-redirect*.log
     - /var/log/containers/tiller*.log
     - /var/log/containers/*kube*.log
     - /var/log/containers/*tiller*.log
     - /var/log/containers/*prometheus*.log
     - /var/log/containers/*calico*.log
     - /var/log/containers/*canal*.log
     - /var/log/containers/*fluent*.log

  # Local splunk configurations
  splunk:
    # Configurations for HEC (HTTP Event Collector)
    hec:
      # host is required and should be provided by user
      host: 10.1.1.33
      # port to HEC, optional, default 8088
      port: 8088
      # token is required and should be provided by user
      token: d1ad165b-572e-4fb2-99ee-b703d6d8e9d0
      # protocol has two options: "http" and "https", default is "https"
      protocol: http
      # indexName tells which index to use, this is optional. If it's not present, will use the default one configured in HEC.
      indexName:
      # insecureSSL is a boolean, it indicates should it allow inscure SSL connection (when protocol is "https"). Default is false.
      insecureSSL:
      # The PEM-format CA certificate for this client.
      # NOTE: The content of the certificate itself should be used here, not the file path.
      #       The certificate will be stored as a secret in kubernetes.
      clientCert:
      # The private key for this client.
      # NOTE: The content of the key itself should be used here, not the file path.
      #       The key will be stored as a secret in kubernetes.
      clientKey:
      # The PEM-format CA certificate file.
      # NOTE: The content of the file itself should be used here, not the file path.
      #       The file will be stored as a secret in kubernetes.
      caFile:
      # indexRouting is a boolean, it indicates whether user wants to route logs to the index with name same as the namespace. Default is false.
      indexRouting:
      # indexRoutingDefaultIndex tells which index to use for the default kubernetes namespace. Used with indexRouting. This value is required when using indexRouting.
      indexRoutingDefaultIndex:
    # Configurations for Ingest API
    ingest_api:
      # serviceClientIdentifier is a string, the client identifier is used to make requests to the ingest API with authorization.
      serviceClientIdentifier:
      # serviceClientSecretKey is a string, the client identifier is used to make requests to the ingest API with authorization.
      serviceClientSecretKey:
      # tokenEndpoint is a string, it indicates which endpoint should be used to get the authorization token used to make requests to the ingest API.
      tokenEndpoint:
      # ingestAPIHost is a string, it indicates which url/hostname should be used to make requests to the ingest API.
      ingestAPIHost:
      # tenant is a string, it indicates which tenant should be used to make requests to the ingest API.
      tenant:
      # eventsEndpoint is a string, it indicates which endpoint should be used to make requests to the ingest API.
      eventsEndpoint:
      # debugIngestAPI is a boolean, it indicates whether user wants to debug requests and responses to ingest API. Default is false.
      debugIngestAPI: false

splunk-kubernetes-logging:
  kubernetes:
    clusterName: grupord-devqa

  logs: {}
    # docker:
    #   from:
    #     journald:
    #       unit: docker.service
    #   timestampExtraction:
    #     regexp: time="(?<time>\d{4}-\d{2}-\d{2}T[0-2]\d:[0-5]\d:[0-5]\d.\d{9}Z)"
    #     format: "%Y-%m-%dT%H:%M:%S.%NZ"
    #   sourcetype: kube:docker
    # kubelet: &glog
    #   from:
    #     journald:
    #       unit: kubelet.service
    #   timestampExtraction:
    #     regexp: \w(?<time>[0-1]\d[0-3]\d [^\s]*)
    #     format: "%m%d %H:%M:%S.%N"
    #   multiline:
    #     firstline: /^\w[0-1]\d[0-3]\d/
    #   sourcetype: kube:kubelet
    # etcd:
    #   from:
    #     pod: etcd-server
    #     container: etcd-container
    #   timestampExtraction:
    #     regexp: (?<time>\d{4}-\d{2}-\d{2} [0-2]\d:[0-5]\d:[0-5]\d\.\d{6})
    #     format: "%Y-%m-%d %H:%M:%S.%N"
    #   sourcetype: kube:etcd
    # etcd-events:
    #   from:
    #     pod: etcd-server-events
    #     container: etcd-container
    #   timestampExtraction:
    #     regexp: (?<time>\d{4}-[0-1]\d-[0-3]\d [0-2]\d:[0-5]\d:[0-5]\d\.\d{6})
    #     format: "%Y-%m-%d %H:%M:%S.%N"
    #   sourcetype: kube:etcd-events
    # kube-apiserver:
    #   <<: *glog
    #   from:
    #     pod: kube-apiserver
    #   sourcetype: kube:kube-apiserver
    # kube-scheduler:
    #   <<: *glog
    #   from:
    #     pod: kube-scheduler
    #   sourcetype: kube:kube-scheduler
    # kube-controller-manager:
    #   <<: *glog
    #   from:
    #     pod: kube-controller-manager
    #   sourcetype: kube:kube-controller-manager
    # kube-proxy:
    #   <<: *glog
    #   from:
    #     pod: kube-proxy
    #   sourcetype: kube:kube-proxy
    # kubedns:
    #   <<: *glog
    #   from:
    #     pod: kube-dns
    #   sourcetype: kube:kubedns
    # dnsmasq:
    #   <<: *glog
    #   from:
    #     pod: kube-dns
    #   sourcetype: kube:dnsmasq
    # dns-sidecar:
    #   <<: *glog
    #   from:
    #     pod: kube-dns
    #     container: sidecar
    #   sourcetype: kube:kubedns-sidecar
    # dns-controller:
    #   <<: *glog
    #   from:
    #     pod: dns-controller
    #   sourcetype: kube:dns-controller
    # kube-dns-autoscaler:
    #   <<: *glog
    #   from:
    #     pod: kube-dns-autoscaler
    #     container: autoscaler
    #   sourcetype: kube:kube-dns-autoscaler
    # kube-audit:
    #   from:
    #     file:
    #       path: /var/log/kube-apiserver-audit.log
    #   timestampExtraction:
    #     format: "%Y-%m-%dT%H:%M:%SZ"
    #   sourcetype: kube:apiserver-audit


## Enabling logging will install the `splunk-kubernetes-logging` chart to a kubernetes
## cluster to collect logs generated in the cluster to a Splunk indexer/indexer cluster.

logging:
  enabled: true

## Enabling objects will install the `splunk-kubernetes-objects` chart to a kubernetes
## cluster to collect kubernetes objects in the cluster to a Splunk indexer/indexer cluster.
objects:
  enabled: false

## Enabling metrics will install the `splunk-kubernetes-metrics` chart to a kubernetes
## cluster to collect metrics of the cluster to a Splunk indexer/indexer cluster.
metrics:
  enabled: false
